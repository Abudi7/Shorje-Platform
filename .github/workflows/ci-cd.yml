name: üöÄ CI/CD Pipeline - Shorje Platform

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.2'
  NODE_VERSION: '18'

jobs:
  test:
    name: üß™ Test Application
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: shorje_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üêò Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis
        coverage: xdebug

    - name: üì¶ Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: üíæ Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: üì• Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest

    - name: üîß Create .env.test
      run: |
        cd shorje-api
        cp .env.dev .env.test
        echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/shorje_test" >> .env.test
        echo "APP_ENV=test" >> .env.test

    - name: üóÑÔ∏è Run database migrations
      run: |
        cd shorje-api
        php bin/console doctrine:database:create --env=test
        php bin/console doctrine:migrations:migrate --no-interaction --env=test

    - name: üß™ Run PHPUnit tests
      run: |
        cd shorje-api
        php bin/phpunit --coverage-clover=coverage.xml

    - name: üìä Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./shorje-api/coverage.xml
        flags: backend
        name: backend-coverage

  security:
    name: üîí Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üîí Run PHP Security Checker
      uses: symfonycorp/security-checker-action@v5

  build:
    name: üèóÔ∏è Build Application
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üêò Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis

    - name: üì• Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

    - name: üîß Create production .env
      run: |
        cd shorje-api
        cp .env.dev .env.prod
        echo "APP_ENV=prod" >> .env.prod
        echo "APP_DEBUG=false" >> .env.prod

    - name: üèóÔ∏è Build assets
      run: |
        cd shorje-api
        php bin/console cache:clear --env=prod
        php bin/console cache:warmup --env=prod

    - name: üì¶ Create deployment package
      run: |
        cd shorje-api
        tar -czf ../shorje-platform.tar.gz --exclude=var/cache --exclude=var/log --exclude=vendor --exclude=node_modules .
        cd ..
        tar -czf shorje-platform-complete.tar.gz shorje-platform.tar.gz README.md DEPLOYMENT.md

    - name: üì§ Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: shorje-platform-build-${{ github.sha }}
        path: |
          shorje-platform-complete.tar.gz
          shorje-api/public/
        retention-days: 30

  deploy-staging:
    name: üöÄ Deploy to Staging (GitHub Pages)
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üì• Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: shorje-platform-build-${{ github.sha }}

    - name: üêò Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis

    - name: üì• Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

    - name: üîß Setup environment for GitHub Pages
      run: |
        cd shorje-api
        cp .env.dev .env
        echo "APP_ENV=prod" >> .env
        echo "APP_DEBUG=false" >> .env
        echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db" >> .env

    - name: üóÑÔ∏è Setup SQLite database
      run: |
        cd shorje-api
        php bin/console doctrine:database:create
        php bin/console doctrine:migrations:migrate --no-interaction

    - name: üèóÔ∏è Build for production
      run: |
        cd shorje-api
        php bin/console cache:clear --env=prod
        php bin/console cache:warmup --env=prod

    - name: üìÅ Prepare GitHub Pages
      run: |
        mkdir -p gh-pages
        cp -r shorje-api/public/* gh-pages/
        cp README.md gh-pages/
        cp DEPLOYMENT.md gh-pages/
        
        # Create staging landing page
        cat > gh-pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="ar" dir="rtl">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>üõí Shorje Platform - Staging Environment</title>
            <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&family=Tajawal:wght@300;400;500;700&display=swap" rel="stylesheet">
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: 'Cairo', 'Tajawal', Arial, sans-serif;
                    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
                    min-height: 100vh;
                    color: white;
                    overflow-x: hidden;
                }
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 2rem;
                }
                .hero {
                    text-align: center;
                    padding: 4rem 0;
                    background: rgba(255, 255, 255, 0.1);
                    border-radius: 20px;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                    margin-bottom: 3rem;
                }
                .hero h1 {
                    font-size: 4rem;
                    margin-bottom: 1rem;
                    background: linear-gradient(45deg, #ff6b6b, #ee5a24, #feca57);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                    background-clip: text;
                }
                .staging-badge {
                    background: #ff6b6b;
                    color: white;
                    padding: 0.5rem 1rem;
                    border-radius: 20px;
                    font-size: 0.9rem;
                    font-weight: bold;
                    margin-bottom: 1rem;
                    display: inline-block;
                }
                .btn {
                    display: inline-block;
                    padding: 1rem 2rem;
                    background: linear-gradient(45deg, #ff6b6b, #ee5a24);
                    color: white;
                    text-decoration: none;
                    border-radius: 50px;
                    font-weight: bold;
                    margin: 0.5rem;
                    transition: all 0.3s ease;
                    box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
                }
                .btn:hover {
                    transform: translateY(-3px);
                    box-shadow: 0 6px 20px rgba(255, 107, 107, 0.6);
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="hero">
                    <div class="staging-badge">üöß STAGING ENVIRONMENT</div>
                    <h1>üõí Shorje Platform</h1>
                    <p>Development & Testing Environment</p>
                    
                    <a href="/app.php" class="btn">üöÄ Launch Staging App</a>
                    <a href="https://github.com/Abudi7/Shorje-Platform" class="btn">üìö View Source</a>
                </div>
            </div>
        </body>
        </html>
        EOF

    - name: üì§ Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./gh-pages

  deploy-production:
    name: üåê Deploy to Production (GitHub Pages)
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üì• Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: shorje-platform-build-${{ github.sha }}

    - name: üêò Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis

    - name: üì• Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

    - name: üîß Setup environment for GitHub Pages
      run: |
        cd shorje-api
        cp .env.dev .env
        echo "APP_ENV=prod" >> .env
        echo "APP_DEBUG=false" >> .env
        echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db" >> .env

    - name: üóÑÔ∏è Setup SQLite database
      run: |
        cd shorje-api
        php bin/console doctrine:database:create
        php bin/console doctrine:migrations:migrate --no-interaction

    - name: üèóÔ∏è Build for production
      run: |
        cd shorje-api
        php bin/console cache:clear --env=prod
        php bin/console cache:warmup --env=prod

    - name: üìÅ Prepare GitHub Pages
      run: |
        mkdir -p gh-pages
        cp -r shorje-api/public/* gh-pages/
        cp README.md gh-pages/
        cp DEPLOYMENT.md gh-pages/
        
        # Create production landing page
        cat > gh-pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="ar" dir="rtl">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>üõí Shorje Platform - Modern Arabic Marketplace</title>
            <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&family=Tajawal:wght@300;400;500;700&display=swap" rel="stylesheet">
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: 'Cairo', 'Tajawal', Arial, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                    color: white;
                    overflow-x: hidden;
                }
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 2rem;
                }
                .hero {
                    text-align: center;
                    padding: 4rem 0;
                    background: rgba(255, 255, 255, 0.1);
                    border-radius: 20px;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                    margin-bottom: 3rem;
                }
                .hero h1 {
                    font-size: 4rem;
                    margin-bottom: 1rem;
                    background: linear-gradient(45deg, #ff6b6b, #ee5a24, #feca57);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                    background-clip: text;
                }
                .production-badge {
                    background: #00b894;
                    color: white;
                    padding: 0.5rem 1rem;
                    border-radius: 20px;
                    font-size: 0.9rem;
                    font-weight: bold;
                    margin-bottom: 1rem;
                    display: inline-block;
                }
                .btn {
                    display: inline-block;
                    padding: 1rem 2rem;
                    background: linear-gradient(45deg, #ff6b6b, #ee5a24);
                    color: white;
                    text-decoration: none;
                    border-radius: 50px;
                    font-weight: bold;
                    margin: 0.5rem;
                    transition: all 0.3s ease;
                    box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
                }
                .btn:hover {
                    transform: translateY(-3px);
                    box-shadow: 0 6px 20px rgba(255, 107, 107, 0.6);
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="hero">
                    <div class="production-badge">‚úÖ PRODUCTION ENVIRONMENT</div>
                    <h1>üõí Shorje Platform</h1>
                    <p>Modern Arabic Marketplace - Live & Ready</p>
                    
                    <a href="/app.php" class="btn">üöÄ Launch Application</a>
                    <a href="https://github.com/Abudi7/Shorje-Platform" class="btn">üìö View Source</a>
                </div>
            </div>
        </body>
        </html>
        EOF

    - name: üì§ Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./gh-pages

    - name: üöÄ Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  status:
    name: üìä Deployment Status
    runs-on: ubuntu-latest
    needs: [test, security, build, deploy-staging, deploy-production]
    if: always()

    steps:
    - name: üìä Create deployment summary
      run: |
        echo "## üöÄ Shorje Platform - Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Build Status:" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| üß™ Tests | ${{ needs.test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| üîí Security | ${{ needs.security.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| üèóÔ∏è Build | ${{ needs.build.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| üöÄ Staging | ${{ needs.deploy-staging.result == 'success' && '‚úÖ Deployed' || needs.deploy-staging.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| üåê Production | ${{ needs.deploy-production.result == 'success' && '‚úÖ Deployed' || needs.deploy-production.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Deployment Links:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "üåê **Production**: https://abudi7.github.io/Shorje-Platform/" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          echo "üöß **Staging**: https://abudi7.github.io/Shorje-Platform/" >> $GITHUB_STEP_SUMMARY
        fi
        echo "üìö **Source Code**: https://github.com/Abudi7/Shorje-Platform" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üéØ Branch Information:" >> $GITHUB_STEP_SUMMARY
        echo "- **Current Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit SHA**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
