name: 🧪 CI - Test & Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: shorje_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis
        coverage: xdebug

    - name: 📦 Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: 💾 Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: 📥 Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest

    - name: 🔧 Create .env.test
      run: |
        cd shorje-api
        cp .env.dev .env.test
        echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/shorje_test" >> .env.test
        echo "APP_ENV=test" >> .env.test

    - name: 🗄️ Run database migrations
      run: |
        cd shorje-api
        php bin/console doctrine:database:create --env=test
        php bin/console doctrine:migrations:migrate --no-interaction --env=test

    - name: 🧪 Run PHPUnit tests
      run: |
        cd shorje-api
        php bin/phpunit --coverage-clover=coverage.xml

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./shorje-api/coverage.xml
        flags: backend
        name: backend-coverage

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔒 Run PHP Security Checker
      uses: symfonycorp/security-checker-action@v5

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd, curl, json, bcmath, soap, xmlrpc, xsl, gmp, exif, fileinfo, sodium, redis

    - name: 📥 Install Composer dependencies
      run: |
        cd shorje-api
        composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

    - name: 🔧 Create production .env
      run: |
        cd shorje-api
        cp .env.dev .env.prod
        echo "APP_ENV=prod" >> .env.prod
        echo "APP_DEBUG=false" >> .env.prod

    - name: 🏗️ Build assets
      run: |
        cd shorje-api
        php bin/console cache:clear --env=prod
        php bin/console cache:warmup --env=prod

    - name: 📦 Create deployment package
      run: |
        cd shorje-api
        tar -czf ../shorje-platform.tar.gz --exclude=var/cache --exclude=var/log --exclude=vendor --exclude=node_modules .
        cd ..
        tar -czf shorje-platform-complete.tar.gz shorje-platform.tar.gz README.md DEPLOYMENT.md

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: shorje-platform-build
        path: |
          shorje-platform-complete.tar.gz
          shorje-api/public/
        retention-days: 30

  status:
    name: 📊 Build Status
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: always()

    steps:
    - name: 📊 Create status summary
      run: |
        echo "## 🚀 Build Status Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 🧪 Tests | ${{ needs.test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔒 Security | ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🏗️ Build | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Next Steps:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.security.result }}" == "success" ] && [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ **All checks passed!** Ready for deployment." >> $GITHUB_STEP_SUMMARY
          echo "🚀 **GitHub Pages**: https://abudi7.github.io/Shorje-Platform/" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Some checks failed.** Please review the logs above." >> $GITHUB_STEP_SUMMARY
        fi
