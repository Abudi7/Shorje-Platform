security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login_check
                default_target_path: app_home
            logout:
                path: app_logout
                target: app_login

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/api/products, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/search, roles: PUBLIC_ACCESS }
        - { path: ^/api/messages/unread-count, roles: PUBLIC_ACCESS }
        - { path: ^/api/notifications/unread-count, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/avatar, roles: PUBLIC_ACCESS }
        - { path: ^/api/contact, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/contexts, roles: PUBLIC_ACCESS }
        - { path: ^/api/\.well-known, roles: PUBLIC_ACCESS }
        - { path: ^/web/products, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/web, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/dashboard, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/home, roles: PUBLIC_ACCESS }
        - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/edit-profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/users, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/chat, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/messages, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon