{% extends 'base.html.twig' %}

{% block title %}منتجاتي - شورجي{% endblock %}

{% block body %}
<!-- Include Home Navigation Component -->
{% include 'components/home-navigation.html.twig' %}

<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900">
    <!-- Header Section -->
    <div class="relative overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 bg-gradient-to-r from-blue-600/10 via-purple-600/10 to-emerald-600/10"></div>
        <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%239C92AC" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-20"></div>
        
        <div class="relative z-10 container mx-auto px-4 py-12">
            <!-- Page Header -->
            <div class="text-center mb-12">
                <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mb-6 shadow-lg">
                    <i class="fas fa-box text-3xl text-white"></i>
                </div>
                <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
                    <span class="gradient-text">منتجاتي</span>
                </h1>
                <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
                    إدارة منتجاتك وتتبع أدائها في منصة شورجي
                </p>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mx-auto px-4 pb-12">
        <!-- Loading State -->
        <div id="loadingState" class="text-center py-12">
            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mb-4">
                <i class="fas fa-spinner fa-spin text-2xl text-white"></i>
            </div>
            <p class="text-gray-600 dark:text-gray-300">جاري تحميل منتجاتك...</p>
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="text-center py-12 hidden">
            <div class="inline-flex items-center justify-center w-24 h-24 bg-gradient-to-r from-gray-200 to-gray-300 dark:from-slate-700 dark:to-slate-600 rounded-full mb-6">
                <i class="fas fa-box-open text-4xl text-gray-400 dark:text-gray-500"></i>
            </div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">لا توجد منتجات بعد</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-8 max-w-md mx-auto">
                ابدأ ببيع منتجاتك! أضف منتجك الأول وابدأ رحلتك في البيع
            </p>
            <button onclick="window.location.href='/products/add'" class="bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700 text-white px-8 py-3 rounded-xl font-medium transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105">
                <i class="fas fa-plus ml-2"></i>إضافة منتج جديد
            </button>
        </div>

        <!-- Products Grid -->
        <div id="productsGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 hidden">
            <!-- Products will be loaded here -->
        </div>
    </div>
</div>

<script>
let currentProducts = [];

// Load my products - SIMPLE VERSION
async function loadMyProducts() {
    console.log('Loading my products with simple API...');
    
    try {
        const response = await apiCall('/web/products/my-simple');
        const data = await response.json();
        
        if (data.error) {
            showToast(data.error, 'error');
            document.getElementById('loadingState').classList.add('hidden');
            document.getElementById('emptyState').classList.remove('hidden');
            return;
        }
        
        currentProducts = data.products || [];
        console.log('Found products:', currentProducts.length);
        
        displayMyProducts(currentProducts);
        
        // Hide loading state
        document.getElementById('loadingState').classList.add('hidden');
        
        // Show empty state if no products
        if (currentProducts.length === 0) {
            document.getElementById('emptyState').classList.remove('hidden');
        } else {
            document.getElementById('emptyState').classList.add('hidden');
            document.getElementById('productsGrid').classList.remove('hidden');
        }
    } catch (error) {
        console.error('Error loading products:', error);
        showToast('حدث خطأ أثناء تحميل المنتجات: ' + error.message, 'error');
        document.getElementById('loadingState').classList.add('hidden');
        document.getElementById('emptyState').classList.remove('hidden');
    }
}

// Display my products - SIMPLE VERSION
function displayMyProducts(products) {
    const grid = document.getElementById('productsGrid');
    
    if (products.length === 0) {
        grid.innerHTML = '<div class="col-span-full text-center py-12"><p class="text-gray-500 dark:text-gray-400">لا توجد منتجات</p></div>';
        return;
    }
    
    grid.innerHTML = products.map(product => `
        <div class="product-card bg-white dark:bg-slate-800 rounded-2xl shadow-lg hover:shadow-xl border border-gray-200 dark:border-slate-600 overflow-hidden transition-all duration-300 hover:scale-105">
            <div class="relative">
                ${product.hasImages?.image1 ? 
                    `<img src="/api/products/image/${product.id}/1" alt="${product.title}" class="w-full h-48 object-cover">` :
                    `<div class="w-full h-48 bg-gradient-to-br from-gray-200 to-gray-300 dark:from-slate-700 dark:to-slate-600 flex items-center justify-center">
                        <i class="fas fa-image text-4xl text-gray-400 dark:text-gray-500"></i>
                    </div>`
                }
                <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 rounded-full text-xs font-bold ${getStatusColor(product.status)}">
                        ${product.status}
                    </span>
                </div>
            </div>
            
            <div class="p-6">
                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2 line-clamp-2">${product.title}</h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">${product.description}</p>
                
                <div class="flex items-center justify-between mb-4">
                    <div class="text-2xl font-bold text-emerald-600 dark:text-emerald-400">
                        ${product.price} ${product.currency}
                    </div>
                    <div class="text-sm text-gray-500 dark:text-gray-400">
                        <i class="fas fa-calendar ml-1"></i>
                        ${new Date(product.createdAt).toLocaleDateString('ar-SA')}
                    </div>
                </div>
                
                <div class="flex items-center justify-between mb-4">
                    <div class="flex items-center space-x-2">
                        <i class="fas fa-tag text-gray-400"></i>
                        <span class="text-sm text-gray-600 dark:text-gray-300">${product.category}</span>
                    </div>
                    <div class="flex items-center space-x-2">
                        <i class="fas fa-map-marker-alt text-gray-400"></i>
                        <span class="text-sm text-gray-600 dark:text-gray-300">${product.city}</span>
                    </div>
                </div>
                
                <div class="flex space-x-2">
                    <button onclick="editProduct(${product.id})" class="flex-1 bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700 text-white px-4 py-2 rounded-lg font-medium transition-all duration-300 text-sm shadow-lg hover:shadow-xl transform hover:scale-105">
                        <i class="fas fa-edit ml-1"></i>تعديل
                    </button>
                    <button onclick="deleteProduct(${product.id})" class="bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg font-medium transition-all duration-300 text-sm shadow-lg hover:shadow-xl transform hover:scale-105">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

// Get status color class
function getStatusColor(status) {
    switch(status) {
        case 'available':
            return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';
        case 'sold':
            return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';
        case 'reserved':
            return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';
        default:
            return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';
    }
}

// Edit product
function editProduct(productId) {
    const product = currentProducts.find(p => p.id === productId);
    if (!product) {
        showToast('المنتج غير موجود', 'error');
        return;
    }
    
    showToast('ميزة التعديل قيد التطوير', 'info');
}

// Delete product
function deleteProduct(productId) {
    const product = currentProducts.find(p => p.id === productId);
    if (!product) {
        showToast('المنتج غير موجود', 'error');
        return;
    }
    
    if (confirm('هل أنت متأكد من حذف هذا المنتج؟')) {
        showToast('ميزة الحذف قيد التطوير', 'info');
    }
}

// Initialize page
document.addEventListener('DOMContentLoaded', function() {
    loadMyProducts();
});
</script>
{% endblock %}